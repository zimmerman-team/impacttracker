{
  "author": {
    "name": "Andrey Tarantsov",
    "email": "andrey@tarantsov.com"
  },
  "name": "pathspec",
  "description": "Shell-like name/path wildcards, gitignore-like file lists",
  "version": "0.9.2",
  "repository": {
    "type": "git",
    "url": "git@github.com:andreyvit/pathspec.js.git"
  },
  "main": "index.js",
  "bin": {
    "pathspec-find": "bin/pathspec-find.js"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha -R ${REPORTER-spec}"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "~1.0.3"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/andreyvit/pathspec.js",
  "readme": "pathspec.js\n===========\n\nA node.js library and a command-line tool (pathspec-find) for matching and introspection of shell/.gitignore-style masks.\n\nShell-style file name masks:\n\n    var Mask = require('pathspec').Mask;\n    console.log(Mask.parse('*.txt').matches('foo.txt')); // true\n    console.log(Mask.parse('*.txt').matches('foo.js'));  // false\n\nShell-style path wildcards:\n\n    var RelPathSpec = require('pathspec').RelPathSpec;\n    console.log(RelPathSpec.parse('foo/**/bar/*.txt').matches('foo/moo/goo/bar/myfile.txt')); // true\n    console.log(RelPathSpec.parse('foo.txt').matches('bar/foo.txt')); // false\n\n.gitignore-style path wildcards:\n\n    var RelPathSpec = require('pathspec').RelPathSpec;\n    console.log(RelPathSpec.parseGitStyleSpec('foo/**/bar').matches('foo/moo/goo/bar/poo/koo/myfile.txt')); // true\n    console.log(RelPathSpec.parseGitStyleSpec('foo.txt').matches('bar/foo.txt')); // true\n\n.gitignore-style path lists:\n\n    var RelPathList = require('pathspec').RelPathList;\n    var list = RelPathList.parse(['*.js', '!bin/*.js']);\n    console.log(list.matches('foo.js')); // true\n    console.log(list.matches('lib/foo.js')); // true\n    console.log(list.matches('bin/foo.js')); // false\n\nBuild a path list manually (spec style is up to you):\n\n    var RelPathList = require('pathspec').RelPathList;\n    var list = new RelPathList();\n    list.include(RelPathSpec.parse('*.js'));\n    list.exclude(RelPathSpec.parse('bar.js'));\n    console.log(list.matches('foo.js')); // true\n    console.log(list.matches('lib/foo.js')); // false\n    console.log(list.matches('bar.js')); // false\n\nNote: they are called RelSomething because the paths are relative to some specific unknown root. Beware that things like '.' and '..' are not treated in any special way.\n\n\nInstallation\n------------\n\n    npm install pathspec\n\n\nCommand-line tool\n-----------------\n\nIncludes pathspec-find(1) which is similar to find(1):\n\n    pathspec-find . '*.json'\n    find . | pathspec-find - '*.json' '!excluded/folder'\n\nThe first argument is the folder to look in. Pass a single dash (`-`) to read the list of files from stdin, one path per line.\n\nThe remaining arguments are .gitignore-style masks. At least one is required.\n\nPass `--help` for usage, `-v` for verbose mode (currently just dumps the RelPathList before processing).\n\n\nRunning tests\n-------------\n\n    npm test\n    REPORTER=dot npm test\n\n\nLicense\n-------\n\nMIT.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/andreyvit/pathspec.js/issues"
  },
  "_id": "pathspec@0.9.2",
  "_from": "pathspec@~0.9.2"
}
