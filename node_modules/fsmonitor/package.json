{
  "name": "fsmonitor",
  "version": "0.2.4",
  "description": "Fine-grained cross-platform file system monitoring for Node.js",
  "main": "lib/index.js",
  "directories": {
    "test": "test"
  },
  "bin": {
    "fsmonitor": "bin/fsmonitor.js"
  },
  "dependencies": {
    "debug": "~0.7.0",
    "pathspec": "~0.9.2"
  },
  "devDependencies": {
    "iced-coffee-script": "~1.7.1-f",
    "mocha": "~1.6.0",
    "scopedfs": "~0.1.0"
  },
  "scripts": {
    "pretest": "./node_modules/.bin/iced -I inline -c lib/*.iced lib/watchers/*.iced test/*.iced",
    "test": "./node_modules/mocha/bin/mocha -R ${REPORTER-spec}"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/andreyvit/fsmonitor.js.git"
  },
  "keywords": [
    "fs",
    "file",
    "watch",
    "watcher",
    "monitor",
    "change"
  ],
  "author": {
    "name": "Andrey Tarantsov",
    "email": "andrey@tarantsov.com"
  },
  "license": "MIT",
  "readme": "# File-grained cross-platform FS monitoring for Node.js\r\n\r\n**Wait, wait, how's it different from `fs.watch`?** Unlike `fs.watch`, fsmonitor:\r\n\r\n* monitors an entire subtree (`fs.watch` only monitors a single folder)\r\n* gives you the entire list of added, removed and modified files and folders (e.g. when you add or delete a non-empty folder, the change event will contain a list of all files in that folder)\r\n\r\nHere's what happens when you call `fsmonitor.watch(path)`:\r\n\r\n* The specified file system subtree is scanned, and the stat data is kept in memory.\r\n* `fs.watch` is called to start monitoring every subfolder encountered.\r\n* When change events are reported, the subtree is rescanned to determine the list of changes.\r\n* `fs.watch` is called for the new subfolders, and the watchers are shut down for the removed ones.\r\n\r\n\r\n## Status\r\n\r\nAlpha stage. Seems to work, waiting for feedback, shipping as part of LiveReload 0.5 for Windows.\r\n\r\nPlanned features:\r\n\r\n* only reporting changes in the files matching .gitignore-style masks you specify (using pathspec module for handling masks)\r\n* more efficient native code implementations on Mac and Windows\r\n* offloading per-folder monitoring backends to child processes to avoid hitting the limit on the number of file handles\r\n\r\n\r\n## Installation\r\n\r\n    npm install fsmonitor\r\n\r\nor, to use fsmonitor command-line tool (see below):\r\n\r\n    npm install -g fsmonitor\r\n\r\n\r\n## Usage\r\n\r\n    fsmonitor = require('fsmonitor');\r\n    fsmonitor.watch('/some/folder', null, function(change) {\r\n        console.log(\"Change detected:\\n\" + change);  # has a nice toString\r\n\r\n        console.log(\"Added files:    %j\", change.addedFiles);\r\n        console.log(\"Modified files: %j\", change.modifiedFiles);\r\n        console.log(\"Removed files:  %j\", change.removedFiles);\r\n\r\n        console.log(\"Added folders:    %j\", change.addedFolders);\r\n        console.log(\"Modified folders: %j\", change.modifiedFolders);\r\n        console.log(\"Removed folders:  %j\", change.removedFolders);\r\n    });\r\n\r\n    var monitor = fsmonitor.watch('.', {\r\n        // include files\r\n        matches: function(relpath) {\r\n            return relpath.match(/\\.js$/i) !== null;\r\n        },\r\n        // exclude directories\r\n        excludes: function(relpath) {\r\n            return relpath.match(/^\\.git$/i) !== null;\r\n        }\r\n    });\r\n    monitor.on('change', function(changes) {\r\n        console.log(changes);\r\n    });\r\n\r\n\r\n## Command-line tool\r\n\r\nIncludes a command-line tool that can report changes and/or run a specified command on every change.\r\n\r\nFor example, to invoke `npm test` when any JavaScript file is modified:\r\n\r\n    fsmonitor -s -p '+*.js' npm test\r\n\r\nUsage:\r\n\r\n    Usage: fsmonitor [-d <folder>] [-p] [-s] [-q] [<mask>]... [<command> <arg>...]\r\n\r\n    Options:\r\n      -d <folder>        Specify the folder to monitor (defaults to the current folder)\r\n      -p                 Print changes to console (default if no command specified)\r\n      -s                 Run the provided command once on start up\r\n      -q                 Quiet mode (don't print the initial banner)\r\n\r\n    Masks:\r\n      +<mask>            Include only the files matching the given mask\r\n      !<mask>            Exclude files matching the given mask\r\n\r\n      If no inclusion masks are provided, all files not explicitly excluded will be included.\r\n\r\n    General options:\r\n      --help             Display this message\r\n      --version          Display fsmonitor version number\r\n\r\n\r\n## Unit test\r\n\r\nInstall necessary modules:\r\n\r\n    npm install\r\n\r\nStart `npm test` to run the unit tests:\r\n\r\n    npm test\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/andreyvit/fsmonitor.js/issues"
  },
  "_id": "fsmonitor@0.2.4",
  "_from": "fsmonitor@~0.2.4"
}
